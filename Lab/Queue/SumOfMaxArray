int sumOfMaxSubarray(vector<int>& nums, int k) {
    if (nums.empty() || k <= 0 || k > nums.size()) {
        return 0; // Trả về 0 nếu mảng rỗng hoặc k không hợp lệ
    }

    deque<int> dq; // Deque để lưu trữ chỉ số của phần tử
    int sum = 0;

    // Duyệt qua từng phần tử trong nums
    for (int i = 0; i < nums.size(); i++) {
        // Loại bỏ các phần tử không nằm trong khoảng của subarray hiện tại
        if (!dq.empty() && dq.front() == i - k) {
            dq.pop_front();
        }

        // Loại bỏ các phần tử không phải là giá trị tối đa
        while (!dq.empty() && nums[dq.back()] < nums[i]) {
            dq.pop_back();
        }

        dq.push_back(i); // Thêm chỉ số hiện tại vào deque

        // Chỉ tính tổng khi có ít nhất k phần tử
        if (i >= k - 1) {
            sum += nums[dq.front()]; // Thêm giá trị tối đa của subarray vào tổng
        }
    }

    return sum; // Trả về tổng
}