bool canEatFood1(int maze[5][5], int x, int y, int fx, int fy, bool visited[5][5]) {
    if (x == fx && y == fy) {
        return true;
    }
    visited[x][y] = true;
    int dx[] = {-1, 1, 0, 0};
    int dy[] = {0, 0, -1, 1};
    for (int i = 0; i < 4; ++i) {
        int newX = x + dx[i];
        int newY = y + dy[i];
        if (newX >= 0 && newX < 5 && newY >= 0 && newY < 5 && maze[newX][newY] == 1 && !visited[newX][newY]) {
            if (canEatFood1(maze, newX, newY, fx, fy, visited)) {
                return true;
            }
        }
    }

    return false;
}
bool canEatFood(int maze[5][5], int fx, int fy){
    /*TODO*/
    bool visited[5][5]={false};
    bool canGo= canEatFood1(maze,0,0,fx,fy,visited);
    return canGo;
}