int trap(vector<int>& height) {
    stack<int> st;
    unsigned int n = height.size();

    if (n < 2) {
        return 0;
    }

    int ans = 0;

    for (unsigned int i = 0; i < n; i++) {
        while (!st.empty() && height[i] > height[st.top()]) {
            int top = st.top();
            st.pop();

            if (st.empty()) break;

            int bH = height[i] > height[st.top()] ? height[st.top()] : height[i];
            int dis = i - st.top() - 1;
            ans += dis * (bH - height[top]);
        }
        st.push(i);
    }
    return ans;
}